--[[
ModMenu Teleport - Tema Nxzott (Dark+Purple)
Fitur:
- Tema dark + aksen ungu (#a259ec/#8752c6)
- Dialog corner radius, gaya simple minimalis
- Tombol menu kecil, animasi scale saat disentuh
- Dialog fade in/out saat buka/tutup
- Dropdown player, mode: Teleport Once, Sit On Head (gendong), Always Teleport (belakang target, smooth, tidak patah)
- Tombol Stop Teleport, hanya muncul saat mode Always Teleport aktif
- Perbaikan fly: bisa naik/turun, beneran terbang (BodyVelocity dan kontrol jump/descend)
- Noclip, Fly
- Tidak ada Rainbow
- Semua fitur support Mobile & PC

By Copilot for @nxzott

]]

if not game:IsLoaded() then game.Loaded:Wait() end

local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")
local TS = game:GetService("TweenService")
local Cam = workspace.CurrentCamera
local lp = Players.LocalPlayer

-- THEME
local ACCENT = Color3.fromRGB(162, 89, 236) -- #a259ec
local ACCENT2 = Color3.fromRGB(135, 82, 198) -- #8752c6
local DARK = Color3.fromRGB(21, 20, 26)
local DARK2 = Color3.fromRGB(36, 34, 44)
local WHITE = Color3.fromRGB(230,230,240)

-- Remove previous menu
if game.CoreGui:FindFirstChild("ModMenuNxzott") then
    game.CoreGui.ModMenuNxzott:Destroy()
end

-- Helper: draggable
local function makeDraggable(frame)
    local dragToggle, dragStart, startPos
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragToggle = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragToggle = false
                end
            end)
        end
    end)
    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            if not dragToggle then return end
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

-- Helper: tween (fade)
local function fade(obj, to, dur)
    TS:Create(obj, TweenInfo.new(dur or 0.2), {BackgroundTransparency=to}):Play()
    for _,v in pairs(obj:GetDescendants()) do
        if v:IsA("TextLabel") or v:IsA("TextButton") then
            TS:Create(v, TweenInfo.new(dur or 0.2), {TextTransparency=to}):Play()
        end
        if v:IsA("Frame") or v:IsA("ScrollingFrame") then
            TS:Create(v, TweenInfo.new(dur or 0.2), {BackgroundTransparency=to}):Play()
        end
    end
end

-- UI
local gui = Instance.new("ScreenGui")
gui.Name = "ModMenuNxzott"
gui.Parent = game:GetService("CoreGui")
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true

-- Menu Button
local MENU_SIZE = 44
local menuBtn = Instance.new("ImageButton")
menuBtn.Name = "MenuBtn"
menuBtn.Size = UDim2.new(0, MENU_SIZE, 0, MENU_SIZE)
menuBtn.Position = UDim2.new(0.5, -MENU_SIZE/2, 0, 12)
menuBtn.AnchorPoint = Vector2.new(0,0)
menuBtn.BackgroundTransparency = 1
menuBtn.Image = "rbxassetid://3570695787"
menuBtn.ImageColor3 = DARK2
menuBtn.Parent = gui

local menuStroke = Instance.new("UIStroke", menuBtn)
menuStroke.Color = ACCENT
menuStroke.Thickness = 2
menuStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

menuBtn.AutoButtonColor = false

-- Icon
local icon = Instance.new("ImageLabel")
icon.Parent = menuBtn
icon.BackgroundTransparency = 1
icon.Size = UDim2.new(0.6,0,0.6,0)
icon.Position = UDim2.new(0.2,0,0.2,0)
icon.Image = "rbxassetid://6035047409"
icon.ImageColor3 = ACCENT

-- Button press anim
menuBtn.MouseButton1Down:Connect(function()
    TS:Create(menuBtn, TweenInfo.new(0.15, Enum.EasingStyle.Back), {Size=UDim2.new(0,MENU_SIZE+8,0,MENU_SIZE+8)}):Play()
    TS:Create(menuBtn, TweenInfo.new(0.15, Enum.EasingStyle.Back), {ImageColor3=ACCENT2}):Play()
end)
menuBtn.MouseButton1Up:Connect(function()
    TS:Create(menuBtn, TweenInfo.new(0.13, Enum.EasingStyle.Back), {Size=UDim2.new(0,MENU_SIZE,0,MENU_SIZE)}):Play()
    TS:Create(menuBtn, TweenInfo.new(0.13, Enum.EasingStyle.Back), {ImageColor3=DARK2}):Play()
end)

makeDraggable(menuBtn)

-- Dialog
local DIALOG_W, DIALOG_H = 320, 320
local dialog = Instance.new("Frame")
dialog.Name = "Dialog"
dialog.Position = UDim2.new(0.5, -DIALOG_W/2, 0.13, 0)
dialog.Size = UDim2.new(0, DIALOG_W, 0, DIALOG_H)
dialog.BackgroundColor3 = DARK2
dialog.BackgroundTransparency = 1
dialog.Visible = false
dialog.Parent = gui
dialog.Active = true
dialog.ClipsDescendants = true

local corner = Instance.new("UICorner", dialog)
corner.CornerRadius = UDim.new(0,16)

local dialogStroke = Instance.new("UIStroke", dialog)
dialogStroke.Thickness = 2
dialogStroke.Color = ACCENT
dialogStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

makeDraggable(dialog)

-- Fade anim helpers
local function showDialog()
    dialog.Visible = true
    dialog.BackgroundTransparency = 1
    for _,v in pairs(dialog:GetDescendants()) do
        if v:IsA("TextLabel") or v:IsA("TextButton") then v.TextTransparency = 1 end
        if v:IsA("Frame") or v:IsA("ScrollingFrame") then v.BackgroundTransparency = 1 end
    end
    TS:Create(dialog, TweenInfo.new(0.22), {BackgroundTransparency=0.06}):Play()
    for _,v in pairs(dialog:GetDescendants()) do
        if v:IsA("TextLabel") or v:IsA("TextButton") then
            TS:Create(v, TweenInfo.new(0.24), {TextTransparency=0}):Play()
        end
        if v:IsA("Frame") or v:IsA("ScrollingFrame") then
            TS:Create(v, TweenInfo.new(0.24), {BackgroundTransparency=0}):Play()
        end
    end
end
local function hideDialog()
    TS:Create(dialog, TweenInfo.new(0.17), {BackgroundTransparency=1}):Play()
    for _,v in pairs(dialog:GetDescendants()) do
        if v:IsA("TextLabel") or v:IsA("TextButton") then
            TS:Create(v, TweenInfo.new(0.17), {TextTransparency=1}):Play()
        end
        if v:IsA("Frame") or v:IsA("ScrollingFrame") then
            TS:Create(v, TweenInfo.new(0.17), {BackgroundTransparency=1}):Play()
        end
    end
    wait(0.18)
    dialog.Visible = false
end

-- Close btn
local closeBtn = Instance.new("TextButton")
closeBtn.Parent = dialog
closeBtn.Size = UDim2.new(0,28,0,28)
closeBtn.Position = UDim2.new(1, -38, 0, 10)
closeBtn.BackgroundColor3 = DARK
closeBtn.Text = "â¨‰"
closeBtn.TextColor3 = WHITE
closeBtn.TextScaled = true
closeBtn.Font = Enum.Font.GothamBlack
closeBtn.BackgroundTransparency = 0
closeBtn.BorderSizePixel = 0

local closeCorner = Instance.new("UICorner", closeBtn)
closeCorner.CornerRadius = UDim.new(1,0)

-- Title
local title = Instance.new("TextLabel")
title.Parent = dialog
title.Position = UDim2.new(0, 0, 0, 10)
title.Size = UDim2.new(1, 0, 0, 34)
title.Text = "ModMenu - Teleport"
title.Font = Enum.Font.GothamBold
title.TextColor3 = WHITE
title.BackgroundTransparency = 1
title.TextScaled = true

-- Player Dropdown
local label1 = Instance.new("TextLabel")
label1.Parent = dialog
label1.Text = "Target:"
label1.Position = UDim2.new(0,18,0,46)
label1.Size = UDim2.new(0,80,0,24)
label1.Font = Enum.Font.Gotham
label1.TextColor3 = WHITE
label1.TextXAlignment = Enum.TextXAlignment.Left
label1.BackgroundTransparency = 1
label1.TextSize = 17

local dropdown = Instance.new("Frame")
dropdown.Parent = dialog
dropdown.Position = UDim2.new(0,85,0,46)
dropdown.Size = UDim2.new(0, 200, 0, 26)
dropdown.BackgroundColor3 = DARK
dropdown.BorderSizePixel = 0

local dropdownCorner = Instance.new("UICorner", dropdown)
dropdownCorner.CornerRadius = UDim.new(0,8)

local selected = Instance.new("TextButton")
selected.Parent = dropdown
selected.Size = UDim2.new(1,0,1,0)
selected.BackgroundTransparency = 1
selected.TextColor3 = WHITE
selected.Text = ""
selected.Font = Enum.Font.Gotham
selected.TextSize = 17
selected.TextXAlignment = Enum.TextXAlignment.Left

local dropList = Instance.new("ScrollingFrame")
dropList.Parent = dropdown
dropList.Size = UDim2.new(1,0,0,0)
dropList.Position = UDim2.new(0,0,1,0)
dropList.CanvasSize = UDim2.new(0,0,0,0)
dropList.Visible = false
dropList.BackgroundColor3 = DARK
dropList.BorderSizePixel = 0
dropList.ScrollBarThickness = 4
dropList.ZIndex = 10

local dropListCorner = Instance.new("UICorner", dropList)
dropListCorner.CornerRadius = UDim.new(0,8)

local function refreshDropdown()
    dropList:ClearAllChildren()
    local players = {}
    for _,v in ipairs(Players:GetPlayers()) do
        if v ~= lp then table.insert(players, v) end
    end
    dropList.CanvasSize = UDim2.new(0,0,0,#players * 26)
    dropList.Size = UDim2.new(1,0,0,#players > 5 and 130 or #players*26)
    for i,plr in ipairs(players) do
        local btn = Instance.new("TextButton")
        btn.Parent = dropList
        btn.Size = UDim2.new(1,0,0,26)
        btn.Position = UDim2.new(0,0,0,(i-1)*26)
        btn.BackgroundTransparency = 1
        btn.Text = plr.Name
        btn.Font = Enum.Font.Gotham
        btn.TextColor3 = WHITE
        btn.TextSize = 16
        btn.ZIndex = 11
        btn.TextXAlignment = Enum.TextXAlignment.Left
        btn.MouseButton1Click:Connect(function()
            selected.Text = plr.Name
            dropList.Visible = false
        end)
    end
end
refreshDropdown()
Players.PlayerAdded:Connect(refreshDropdown)
Players.PlayerRemoving:Connect(refreshDropdown)
selected.MouseButton1Click:Connect(function()
    dropList.Visible = not dropList.Visible
end)

-- Mode Switch
local modeLabel = Instance.new("TextLabel")
modeLabel.Parent = dialog
modeLabel.Position = UDim2.new(0,18,0,80)
modeLabel.Size = UDim2.new(0,70,0,24)
modeLabel.BackgroundTransparency = 1
modeLabel.Text = "Mode:"
modeLabel.TextColor3 = WHITE
modeLabel.Font = Enum.Font.Gotham
modeLabel.TextSize = 16
modeLabel.TextXAlignment = Enum.TextXAlignment.Left

local modeList = {"Teleport Once", "Sit On Head", "Always Teleport"}
local mode = 1

local modeSwitch = Instance.new("TextButton")
modeSwitch.Parent = dialog
modeSwitch.Position = UDim2.new(0,85,0,80)
modeSwitch.Size = UDim2.new(0,200,0,24)
modeSwitch.Text = modeList[mode]
modeSwitch.Font = Enum.Font.GothamBold
modeSwitch.BackgroundColor3 = DARK
modeSwitch.TextColor3 = ACCENT
modeSwitch.TextSize = 15
modeSwitch.AutoButtonColor = true

local modeCorner = Instance.new("UICorner", modeSwitch)
modeCorner.CornerRadius = UDim.new(0,8)

modeSwitch.MouseButton1Click:Connect(function()
    mode = mode + 1
    if mode > #modeList then mode = 1 end
    modeSwitch.Text = modeList[mode]
end)

-- Teleport Button
local teleBtn = Instance.new("TextButton")
teleBtn.Parent = dialog
teleBtn.Position = UDim2.new(0.5, -75, 0, 120)
teleBtn.Size = UDim2.new(0,150,0,34)
teleBtn.Text = "TELEPORT"
teleBtn.Font = Enum.Font.GothamBlack
teleBtn.TextColor3 = WHITE
teleBtn.BackgroundColor3 = ACCENT
teleBtn.TextSize = 19
teleBtn.BorderSizePixel = 0

local teleCorner = Instance.new("UICorner", teleBtn)
teleCorner.CornerRadius = UDim.new(0,10)

-- Status
local statusText = Instance.new("TextLabel")
statusText.Parent = dialog
statusText.Position = UDim2.new(0,16,0,160)
statusText.Size = UDim2.new(1,-32,0,22)
statusText.BackgroundTransparency = 1
statusText.Text = ""
statusText.TextColor3 = ACCENT
statusText.Font = Enum.Font.Gotham
statusText.TextSize = 15
statusText.TextWrapped = true

-- STOP TELEPORT Button
local stopTeleportBtn = Instance.new("TextButton")
stopTeleportBtn.Parent = dialog
stopTeleportBtn.Position = UDim2.new(0.5,-62,0,190)
stopTeleportBtn.Size = UDim2.new(0,124,0,30)
stopTeleportBtn.Text = "STOP TELEPORT"
stopTeleportBtn.Font = Enum.Font.GothamBold
stopTeleportBtn.BackgroundColor3 = ACCENT2
stopTeleportBtn.TextColor3 = WHITE
stopTeleportBtn.TextSize = 15
stopTeleportBtn.BorderSizePixel = 0
stopTeleportBtn.Visible = false

local stopCorner = Instance.new("UICorner", stopTeleportBtn)
stopCorner.CornerRadius = UDim.new(0,10)

-- Noclip
local noclip = false
local noclipSwitch = Instance.new("TextButton")
noclipSwitch.Parent = dialog
noclipSwitch.Position = UDim2.new(0,18,0,232)
noclipSwitch.Size = UDim2.new(0,130,0,28)
noclipSwitch.Text = "Noclip: OFF"
noclipSwitch.BackgroundColor3 = DARK
noclipSwitch.TextColor3 = Color3.fromRGB(255,120,180)
noclipSwitch.Font = Enum.Font.GothamBold
noclipSwitch.TextSize = 15

local noclipCorner = Instance.new("UICorner", noclipSwitch)
noclipCorner.CornerRadius = UDim.new(0,8)

noclipSwitch.MouseButton1Click:Connect(function()
    noclip = not noclip
    noclipSwitch.Text = "Noclip: " .. (noclip and "ON" or "OFF")
    noclipSwitch.TextColor3 = noclip and ACCENT or Color3.fromRGB(255,120,180)
end)

-- Fly (real fly, up/down)
local fly = false
local flySwitch = Instance.new("TextButton")
flySwitch.Parent = dialog
flySwitch.Position = UDim2.new(0,165,0,232)
flySwitch.Size = UDim2.new(0,130,0,28)
flySwitch.Text = "Fly: OFF"
flySwitch.BackgroundColor3 = DARK
flySwitch.TextColor3 = Color3.fromRGB(150,120,255)
flySwitch.Font = Enum.Font.GothamBold
flySwitch.TextSize = 15

local flyCorner = Instance.new("UICorner", flySwitch)
flyCorner.CornerRadius = UDim.new(0,8)

flySwitch.MouseButton1Click:Connect(function()
    fly = not fly
    flySwitch.Text = "Fly: " .. (fly and "ON" or "OFF")
    flySwitch.TextColor3 = fly and ACCENT or Color3.fromRGB(150,120,255)
end)

-- Noclip Handler
RS.Stepped:Connect(function()
    if noclip and lp.Character and lp.Character:FindFirstChildOfClass("Humanoid") then
        for _,v in pairs(lp.Character:GetDescendants()) do
            if v:IsA("BasePart") and v.CanCollide then
                v.CanCollide = false
            end
        end
    end
end)

-- Fly Handler (real fly, WASD + mobile, Space=up, LeftCtrl=down)
local bv = nil
RS.RenderStepped:Connect(function()
    if fly and lp.Character and lp.Character:FindFirstChild("HumanoidRootPart") then
        if not bv then
            bv = Instance.new("BodyVelocity")
            bv.Name = "FlyVelocity"
            bv.MaxForce = Vector3.new(1e6,1e6,1e6)
            bv.Parent = lp.Character.HumanoidRootPart
        end
        local moveVec = Vector3.new()
        if UIS.TouchEnabled then
            -- Mobile: pakai arah kamera + jump
            moveVec = Cam.CFrame.LookVector * 25
            if UIS:IsKeyDown(Enum.KeyCode.Space) then moveVec = moveVec + Vector3.new(0,20,0) end
            if UIS:IsKeyDown(Enum.KeyCode.LeftControl) then moveVec = moveVec - Vector3.new(0,20,0) end
        else
            if UIS:IsKeyDown(Enum.KeyCode.W) then moveVec = moveVec + Cam.CFrame.LookVector end
            if UIS:IsKeyDown(Enum.KeyCode.S) then moveVec = moveVec - Cam.CFrame.LookVector end
            if UIS:IsKeyDown(Enum.KeyCode.A) then moveVec = moveVec - Cam.CFrame.RightVector end
            if UIS:IsKeyDown(Enum.KeyCode.D) then moveVec = moveVec + Cam.CFrame.RightVector end
            if UIS:IsKeyDown(Enum.KeyCode.Space) then moveVec = moveVec + Vector3.new(0,1,0) end
            if UIS:IsKeyDown(Enum.KeyCode.LeftControl) then moveVec = moveVec - Vector3.new(0,1,0) end
            moveVec = moveVec * 25
        end
        bv.Velocity = moveVec
    elseif bv then
        bv:Destroy()
        bv = nil
    end
end)

-- Teleport Logic
local alwaysTeleportConn = nil
local sitWeld = nil
local sitAnim = nil
local stopFlag = false

local function stopSit()
    if sitWeld then pcall(function() sitWeld:Destroy() end) sitWeld = nil end
    if sitAnim then pcall(function() sitAnim:Stop() sitAnim:Destroy() end) sitAnim = nil end
    if lp.Character and lp.Character:FindFirstChildOfClass("Humanoid") then
        lp.Character:FindFirstChildOfClass("Humanoid").Sit = false
    end
end

local function stopTeleport()
    stopFlag = true
    statusText.Text = "Stopped teleport"
    stopTeleportBtn.Visible = false
    if alwaysTeleportConn then alwaysTeleportConn:Disconnect() alwaysTeleportConn = nil end
end

stopTeleportBtn.MouseButton1Click:Connect(stopTeleport)

local function teleportToPlayer(targetName, modeType)
    stopFlag = false
    stopSit()
    if alwaysTeleportConn then alwaysTeleportConn:Disconnect() alwaysTeleportConn = nil end
    local target = Players:FindFirstChild(targetName)
    if not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then
        statusText.Text = "Player not found or not loaded!"
        stopTeleportBtn.Visible = false
        return
    end
    local hrp = lp.Character and lp.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then statusText.Text = "Your character not loaded!"; stopTeleportBtn.Visible = false; return end
    if modeType == "Teleport Once" then
        hrp.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.new(0,2,0)
        statusText.Text = "Teleported to " .. targetName
        stopTeleportBtn.Visible = false
    elseif modeType == "Sit On Head" then
        local offset = CFrame.new(0, 3.5, -0.7) -- sedikit di belakang kepala
        hrp.CFrame = target.Character.HumanoidRootPart.CFrame * offset
        -- Sit animation
        local hum = lp.Character:FindFirstChildOfClass("Humanoid")
        if hum then hum.Sit = true end
        if hum then
            local sitAnimObj = Instance.new("Animation")
            sitAnimObj.AnimationId = "rbxassetid://507771019" -- anim sit di kepala
            sitAnim = hum:LoadAnimation(sitAnimObj)
            sitAnim:Play()
        end
        sitWeld = Instance.new("WeldConstraint")
        sitWeld.Part0 = hrp
        sitWeld.Part1 = target.Character.HumanoidRootPart
        sitWeld.Parent = hrp
        statusText.Text = "Sitting on " .. targetName .. "'s head"
        stopTeleportBtn.Visible = false
    elseif modeType == "Always Teleport" then
        local lastPos = nil
        stopTeleportBtn.Visible = true
        alwaysTeleportConn = RS.RenderStepped:Connect(function()
            if stopFlag or not dialog.Visible then return end
            if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") and lp.Character and lp.Character:FindFirstChild("HumanoidRootPart") then
                local tgtHRP = target.Character.HumanoidRootPart
                -- Smooth follow (lerp)
                local targetPos = (tgtHRP.CFrame * CFrame.new(0,1.5,-2.2)).Position
                local currPos = lp.Character.HumanoidRootPart.Position
                local newPos = currPos:Lerp(targetPos, 0.42)
                lp.Character.HumanoidRootPart.CFrame = CFrame.new(newPos, tgtHRP.Position)
                lastPos = newPos
            end
        end)
        statusText.Text = "Following behind " .. targetName .. " (Stop to finish)"
    end
end

teleBtn.MouseButton1Click:Connect(function()
    local uname = selected.Text
    if uname == "" then
        statusText.Text = "Pilih player target dahulu."
        stopTeleportBtn.Visible = false
        return
    end
    teleportToPlayer(uname, modeList[mode])
end)

closeBtn.MouseButton1Click:Connect(function()
    hideDialog()
    statusText.Text = ""
    stopSit()
    stopTeleport()
end)

menuBtn.MouseButton1Click:Connect(function()
    if not dialog.Visible then
        showDialog()
    else
        hideDialog()
        stopSit()
        stopTeleport()
    end
end)

-- Hide on Console
if UIS.GamepadEnabled and not UIS.TouchEnabled then
    gui.Enabled = false
    warn("ModMenu supports only Mobile & PC, not Console.")
end

lp.CharacterAdded:Connect(function(char)
    wait(1)
    stopSit()
end)

-- End
