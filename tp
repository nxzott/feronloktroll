-- Roblox Mod Menu Teleport - Improved Version (Mobile & PC)
-- By Copilot, update for nxzott

-- CONFIGURATIONS
local BTN_SIZE = 48 -- button diameter (smaller)
local BTN_POS_Y = 16 -- closer to top
local DIALOG_SIZE = UDim2.new(0, 320, 0, 340)
local RGBCycleSpeed = 2 -- seconds per color loop

if not game:IsLoaded() then game.Loaded:Wait() end

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Camera = workspace.CurrentCamera

local lp = Players.LocalPlayer

-- Remove previous menu if exists
if game.CoreGui:FindFirstChild("CoolModMenu") then
    game.CoreGui.CoolModMenu:Destroy()
end

-- Helper: Make Draggable
local function makeDraggable(frame)
    local dragging, dragInput, dragStart, startPos
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

-- Helper: RGB Color
local function getRGBColor(t)
    local r = math.sin(t * math.pi * 2 / RGBCycleSpeed) * 127 + 128
    local g = math.sin(t * math.pi * 2 / RGBCycleSpeed + 2) * 127 + 128
    local b = math.sin(t * math.pi * 2 / RGBCycleSpeed + 4) * 127 + 128
    return Color3.fromRGB(r, g, b)
end

-- UI Creation
local gui = Instance.new("ScreenGui")
gui.Name = "CoolModMenu"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.Parent = game:GetService("CoreGui")

-- Main ModMenu Button (Circle, small, no RGB)
local menuBtn = Instance.new("ImageButton")
menuBtn.Name = "ModMenuBtn"
menuBtn.AnchorPoint = Vector2.new(0.5,0)
menuBtn.Position = UDim2.new(0.5, 0, 0, BTN_POS_Y)
menuBtn.Size = UDim2.new(0, BTN_SIZE, 0, BTN_SIZE)
menuBtn.BackgroundTransparency = 1
menuBtn.Image = "rbxassetid://3570695787"
menuBtn.ImageColor3 = Color3.new(0,0,0)
menuBtn.Parent = gui

-- Icon
local icon = Instance.new("ImageLabel")
icon.Parent = menuBtn
icon.BackgroundTransparency = 1
icon.Size = UDim2.new(0.7,0,0.7,0)
icon.Position = UDim2.new(0.15,0,0.15,0)
icon.Image = "rbxassetid://6035047409" -- teleport icon

-- Drag & Drop
makeDraggable(menuBtn)

-- Dialog Menu UI
local dialog = Instance.new("Frame")
dialog.Name = "Dialog"
dialog.Position = UDim2.new(0.5, -DIALOG_SIZE.X.Offset/2, 0.13, 0)
dialog.Size = DIALOG_SIZE
dialog.BackgroundColor3 = Color3.new(0.1,0.1,0.1)
dialog.BackgroundTransparency = 0.12
dialog.Visible = false
dialog.Parent = gui
dialog.AnchorPoint = Vector2.new(0,0)
dialog.Active = true
dialog.ClipsDescendants = true

-- Dialog RGB Accent
local dialogStroke = Instance.new("UIStroke", dialog)
dialogStroke.Thickness = 3
dialogStroke.Color = Color3.fromRGB(255,0,0)

makeDraggable(dialog)

-- Close Button (small)
local closeBtn = Instance.new("TextButton")
closeBtn.Parent = dialog
closeBtn.Position = UDim2.new(1, -34, 0, 6)
closeBtn.Size = UDim2.new(0, 28, 0, 28)
closeBtn.Text = "â¨‰"
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextColor3 = Color3.fromRGB(255,255,255)
closeBtn.BackgroundColor3 = Color3.fromRGB(30,30,30)
closeBtn.BackgroundTransparency = 0.12
closeBtn.AutoButtonColor = true
closeBtn.BorderSizePixel = 0
closeBtn.ZIndex = 2

-- Title
local title = Instance.new("TextLabel")
title.Parent = dialog
title.Position = UDim2.new(0, 0, 0, 8)
title.Size = UDim2.new(1, 0, 0, 32)
title.Text = "ModMenu - Teleport"
title.Font = Enum.Font.GothamBold
title.TextColor3 = Color3.new(1,1,1)
title.BackgroundTransparency = 1
title.TextScaled = true

-- Dropdown Player Picker
local playerLabel = Instance.new("TextLabel")
playerLabel.Parent = dialog
playerLabel.Position = UDim2.new(0,16,0,46)
playerLabel.Size = UDim2.new(0,110,0,28)
playerLabel.BackgroundTransparency = 1
playerLabel.Text = "Target:"
playerLabel.TextColor3 = Color3.fromRGB(180,180,180)
playerLabel.Font = Enum.Font.Gotham
playerLabel.TextXAlignment = Enum.TextXAlignment.Left
playerLabel.TextSize = 17

local dropdown = Instance.new("Frame")
dropdown.Parent = dialog
dropdown.Position = UDim2.new(0,85,0,46)
dropdown.Size = UDim2.new(0, 200, 0, 28)
dropdown.BackgroundColor3 = Color3.fromRGB(30,30,30)
dropdown.BorderSizePixel = 0

local selected = Instance.new("TextButton")
selected.Parent = dropdown
selected.Size = UDim2.new(1,0,1,0)
selected.BackgroundTransparency = 1
selected.TextColor3 = Color3.new(1,1,1)
selected.Text = ""
selected.Font = Enum.Font.Gotham
selected.TextSize = 17

local dropList = Instance.new("ScrollingFrame")
dropList.Parent = dropdown
dropList.Size = UDim2.new(1,0,0,0)
dropList.Position = UDim2.new(0,0,1,0)
dropList.CanvasSize = UDim2.new(0,0,0,0)
dropList.Visible = false
dropList.BackgroundColor3 = Color3.fromRGB(40,40,40)
dropList.BorderSizePixel = 0
dropList.ScrollBarThickness = 4
dropList.ZIndex = 10

local function refreshDropdown()
    dropList:ClearAllChildren()
    local players = {}
    for _,v in ipairs(Players:GetPlayers()) do
        if v ~= lp then table.insert(players, v) end
    end
    dropList.CanvasSize = UDim2.new(0,0,0,#players * 26)
    dropList.Size = UDim2.new(1,0,0,#players > 5 and 130 or #players*26)
    for i,plr in ipairs(players) do
        local btn = Instance.new("TextButton")
        btn.Parent = dropList
        btn.Size = UDim2.new(1,0,0,26)
        btn.Position = UDim2.new(0,0,0,(i-1)*26)
        btn.BackgroundTransparency = 1
        btn.Text = plr.Name
        btn.Font = Enum.Font.Gotham
        btn.TextColor3 = Color3.new(1,1,1)
        btn.TextSize = 16
        btn.ZIndex = 11
        btn.MouseButton1Click:Connect(function()
            selected.Text = plr.Name
            dropList.Visible = false
        end)
    end
end
refreshDropdown()
Players.PlayerAdded:Connect(refreshDropdown)
Players.PlayerRemoving:Connect(refreshDropdown)

selected.MouseButton1Click:Connect(function()
    dropList.Visible = not dropList.Visible
end)

-- Teleport Mode Switch
local modeLabel = Instance.new("TextLabel")
modeLabel.Parent = dialog
modeLabel.Position = UDim2.new(0,16,0,82)
modeLabel.Size = UDim2.new(0,70,0,25)
modeLabel.BackgroundTransparency = 1
modeLabel.Text = "Mode:"
modeLabel.TextColor3 = Color3.fromRGB(180,180,180)
modeLabel.Font = Enum.Font.Gotham
modeLabel.TextXAlignment = Enum.TextXAlignment.Left
modeLabel.TextSize = 16

local modeList = {"Teleport Once", "Sit On Shoulder", "Always Teleport"}
local mode = 1

local modeSwitch = Instance.new("TextButton")
modeSwitch.Parent = dialog
modeSwitch.Position = UDim2.new(0,85,0,82)
modeSwitch.Size = UDim2.new(0,200,0,25)
modeSwitch.Text = modeList[mode]
modeSwitch.Font = Enum.Font.GothamBold
modeSwitch.BackgroundColor3 = Color3.fromRGB(40,40,40)
modeSwitch.TextColor3 = Color3.fromRGB(0,255,165)
modeSwitch.TextSize = 15

modeSwitch.MouseButton1Click:Connect(function()
    mode = mode + 1
    if mode > #modeList then mode = 1 end
    modeSwitch.Text = modeList[mode]
end)

-- Teleport Button
local teleBtn = Instance.new("TextButton")
teleBtn.Parent = dialog
teleBtn.Position = UDim2.new(0.5, -75, 0, 120)
teleBtn.Size = UDim2.new(0,150,0,34)
teleBtn.Text = "TELEPORT"
teleBtn.Font = Enum.Font.GothamBlack
teleBtn.TextColor3 = Color3.new(1,1,1)
teleBtn.BackgroundColor3 = Color3.fromRGB(0,110,255)
teleBtn.TextSize = 19
teleBtn.BorderSizePixel = 0

-- Status
local statusText = Instance.new("TextLabel")
statusText.Parent = dialog
statusText.Position = UDim2.new(0,15,0,160)
statusText.Size = UDim2.new(1,-30,0,28)
statusText.BackgroundTransparency = 1
statusText.Text = ""
statusText.TextColor3 = Color3.fromRGB(120,255,120)
statusText.Font = Enum.Font.Gotham
statusText.TextSize = 15
statusText.TextWrapped = true

-- Extra: Noclip
local noclip = false
local noclipSwitch = Instance.new("TextButton")
noclipSwitch.Parent = dialog
noclipSwitch.Position = UDim2.new(0,15,0,196)
noclipSwitch.Size = UDim2.new(0,130,0,28)
noclipSwitch.Text = "Noclip: OFF"
noclipSwitch.BackgroundColor3 = Color3.fromRGB(30,30,30)
noclipSwitch.TextColor3 = Color3.fromRGB(255,120,120)
noclipSwitch.Font = Enum.Font.GothamBold
noclipSwitch.TextSize = 15

noclipSwitch.MouseButton1Click:Connect(function()
    noclip = not noclip
    noclipSwitch.Text = "Noclip: " .. (noclip and "ON" or "OFF")
    noclipSwitch.TextColor3 = noclip and Color3.fromRGB(30,255,180) or Color3.fromRGB(255,120,120)
end)

-- Extra: Fly
local fly = false
local flySwitch = Instance.new("TextButton")
flySwitch.Parent = dialog
flySwitch.Position = UDim2.new(0,160,0,196)
flySwitch.Size = UDim2.new(0,130,0,28)
flySwitch.Text = "Fly: OFF"
flySwitch.BackgroundColor3 = Color3.fromRGB(30,30,30)
flySwitch.TextColor3 = Color3.fromRGB(180,180,255)
flySwitch.Font = Enum.Font.GothamBold
flySwitch.TextSize = 15

flySwitch.MouseButton1Click:Connect(function()
    fly = not fly
    flySwitch.Text = "Fly: " .. (fly and "ON" or "OFF")
    flySwitch.TextColor3 = fly and Color3.fromRGB(50,200,255) or Color3.fromRGB(180,180,255)
end)

-- Rainbow Character, restore color after off
local rainbowChar = false
local originalColors = {}
local rainbowSwitch = Instance.new("TextButton")
rainbowSwitch.Parent = dialog
rainbowSwitch.Position = UDim2.new(0,15,0,235)
rainbowSwitch.Size = UDim2.new(0,130,0,28)
rainbowSwitch.Text = "Rainbow: OFF"
rainbowSwitch.BackgroundColor3 = Color3.fromRGB(30,30,30)
rainbowSwitch.TextColor3 = Color3.fromRGB(255,200,90)
rainbowSwitch.Font = Enum.Font.GothamBold
rainbowSwitch.TextSize = 15

rainbowSwitch.MouseButton1Click:Connect(function()
    rainbowChar = not rainbowChar
    rainbowSwitch.Text = "Rainbow: " .. (rainbowChar and "ON" or "OFF")
    rainbowSwitch.TextColor3 = rainbowChar and Color3.fromRGB(255,255,0) or Color3.fromRGB(255,200,90)
    if not rainbowChar and lp.Character then
        -- Restore original colors
        for _,part in pairs(lp.Character:GetDescendants()) do
            if part:IsA("BasePart") and originalColors[part] then
                part.Color = originalColors[part]
            end
        end
    end
end)

-- Always Teleport Loop & Sit on Shoulder Handler
local alwaysTeleportConn = nil
local sitWeld = nil
local sitAnim = nil

local function stopSit()
    if sitWeld then
        pcall(function() sitWeld:Destroy() end)
        sitWeld = nil
    end
    if sitAnim then
        pcall(function() sitAnim:Stop() sitAnim:Destroy() end)
        sitAnim = nil
    end
    if lp.Character and lp.Character:FindFirstChildOfClass("Humanoid") then
        lp.Character:FindFirstChildOfClass("Humanoid").Sit = false
    end
end

local function teleportToPlayer(targetName, modeType)
    stopSit()
    if alwaysTeleportConn then alwaysTeleportConn:Disconnect() alwaysTeleportConn = nil end
    local target = Players:FindFirstChild(targetName)
    if not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then
        statusText.Text = "Player not found or not loaded!"
        return
    end
    local hrp = lp.Character and lp.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then statusText.Text = "Your character not loaded!"; return end
    if modeType == "Teleport Once" then
        hrp.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.new(0,2,0)
        statusText.Text = "Teleported to " .. targetName
    elseif modeType == "Sit On Shoulder" then
        local offset = CFrame.new(1.5, 2.5, 0)
        hrp.CFrame = target.Character.HumanoidRootPart.CFrame * offset
        -- Sit animation
        local hum = lp.Character:FindFirstChildOfClass("Humanoid")
        if hum then hum.Sit = true end
        -- Try play sit anim
        if hum then
            local sitAnimObj = Instance.new("Animation")
            sitAnimObj.AnimationId = "rbxassetid://2506281703" -- common sit animation
            sitAnim = hum:LoadAnimation(sitAnimObj)
            sitAnim:Play()
        end
        -- Weld to their HRP
        sitWeld = Instance.new("WeldConstraint")
        sitWeld.Part0 = hrp
        sitWeld.Part1 = target.Character.HumanoidRootPart
        sitWeld.Parent = hrp
        statusText.Text = "Sitting on " .. targetName .. "'s shoulder"
    elseif modeType == "Always Teleport" then
        alwaysTeleportConn = RunService.RenderStepped:Connect(function()
            if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") and lp.Character and lp.Character:FindFirstChild("HumanoidRootPart") then
                local tgtCFrame = target.Character.HumanoidRootPart.CFrame
                local look = tgtCFrame.LookVector
                -- Always teleport behind target (2.5 studs behind)
                lp.Character.HumanoidRootPart.CFrame = tgtCFrame * CFrame.new(0,1.5,-2.5)
            end
        end)
        statusText.Text = "Always teleporting behind " .. targetName .. " (close dialog to stop)"
    end
end

teleBtn.MouseButton1Click:Connect(function()
    local uname = selected.Text
    if uname == "" then
        statusText.Text = "Pilih player target dahulu."
        return
    end
    teleportToPlayer(uname, modeList[mode])
end)

closeBtn.MouseButton1Click:Connect(function()
    dialog.Visible = false
    statusText.Text = ""
    stopSit()
    if alwaysTeleportConn then alwaysTeleportConn:Disconnect() alwaysTeleportConn = nil end
end)

-- Menu Button Toggle
menuBtn.MouseButton1Click:Connect(function()
    dialog.Visible = not dialog.Visible
    if not dialog.Visible then
        statusText.Text = ""
        stopSit()
        if alwaysTeleportConn then alwaysTeleportConn:Disconnect() alwaysTeleportConn = nil end
    end
end)

-- Noclip Handler
RunService.Stepped:Connect(function()
    if noclip and lp.Character and lp.Character:FindFirstChildOfClass("Humanoid") then
        for _,v in pairs(lp.Character:GetDescendants()) do
            if v:IsA("BasePart") and v.CanCollide then
                v.CanCollide = false
            end
        end
    end
end)

-- Fly Handler
local bv = nil
RunService.RenderStepped:Connect(function()
    if fly and lp.Character and lp.Character:FindFirstChild("HumanoidRootPart") then
        if not bv then
            bv = Instance.new("BodyVelocity")
            bv.Name = "FlyVelocity"
            bv.MaxForce = Vector3.new(1e6,1e6,1e6)
            bv.Parent = lp.Character.HumanoidRootPart
        end
        -- WASD on PC, thumbstick on mobile
        local moveVec = Vector3.new()
        if UserInputService.TouchEnabled then
            moveVec = lp:GetMouse().Hit.LookVector * 35
        else
            if UserInputService:IsKeyDown(Enum.KeyCode.W) then moveVec = moveVec + Camera.CFrame.LookVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then moveVec = moveVec - Camera.CFrame.LookVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then moveVec = moveVec - Camera.CFrame.RightVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then moveVec = moveVec + Camera.CFrame.RightVector end
            moveVec = moveVec * 35
        end
        bv.Velocity = Vector3.new(moveVec.X, 0, moveVec.Z) + Vector3.new(0, UserInputService:IsKeyDown(Enum.KeyCode.Space) and 35 or 0, 0)
    elseif bv then
        bv:Destroy()
        bv = nil
    end
end)

-- Rainbow Character Handler
coroutine.wrap(function()
    while true do
        if rainbowChar and lp.Character then
            for _,part in pairs(lp.Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    if not originalColors[part] then
                        originalColors[part] = part.Color
                    end
                    part.Color = getRGBColor(tick())
                end
            end
        end
        wait(0.12)
    end
end)()

-- Dialog RGB Outline
coroutine.wrap(function()
    while true do
        dialogStroke.Color = getRGBColor(tick())
        wait(0.03)
    end
end)()

-- Hide on Console
if UserInputService.GamepadEnabled and not UserInputService.TouchEnabled then
    gui.Enabled = false
    warn("ModMenu supports only Mobile & PC, not Console.")
end

-- Restore color on respawn
lp.CharacterAdded:Connect(function(char)
    wait(1)
    originalColors = {}
end)

-- // END //
